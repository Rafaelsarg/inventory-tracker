@inject NavigationManager NavigationManager
@inject IUserService UserService
@rendermode InteractiveServer

<nav class="">
    <ul class="nav_list">
        <li class="navbar_logoitem"></li>
        <li class="navbar_listitem"> @UserService.User.EmailAddress
            <ul class="nav_listitem_drop">
                <li><a href="#" @onclick="Logout">Log Out</a></li>
            </ul>
        </li>
    </ul>
</nav>


<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
    }

    nav {
        background-color: #343a40;
        padding: 10px 20px;
    }

    .nav_list {
        display: flex;
        justify-content: space-between;
        align-items: center;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .navbar_logoitem {
        width: 100px;
        height: 40px;
        background-color: #343a40; 
    }

    .navbar_listitem {
        position: relative;
        color: #007bff;
        cursor: pointer;
        padding: 10px 20px;
    }

    .navbar_listitem:hover .nav_listitem_drop {
        display: block;
    }


    .nav_listitem_drop {
        display: none;
        position: absolute;
        top: 100%;
        right: 0;
        background-color: white;
        list-style: none;
        padding: 0;
        margin: 0;
        min-width: 160px;
        border-radius: 4px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .nav_listitem_drop li {
        padding: 10px;
        color: #007bff;
        text-align: left;
    }

    .nav_listitem_drop li:hover {
        background-color: #f8f9fa;
    }
    
</style>

@code {
    private bool dropdownOpen = false;
    
    protected override async Task OnInitializedAsync()
    {
        int userID;
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("uid", out var id))
        {
            userID = int.Parse(id);
            await UserService.GetUserInfoByIDAsync(userID);
        }
    }
    
    private void ToggleDropdown()
    {
        dropdownOpen = !dropdownOpen;
    }

    private void CloseDropdown()
    {
        dropdownOpen = false;
    }

    private void Logout()
    {
        NavigationManager.NavigateTo("/" , forceLoad: true);
        // Add your logout logic here
        Console.WriteLine("Logged out");
        CloseDropdown();
    }
}
